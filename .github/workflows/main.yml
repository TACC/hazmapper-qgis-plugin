name: CI

on:
  push: {}
  pull_request: {}

jobs:
  lint-type-format-checks-and-non-qgis-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v4
      - name: Create venv bound to matrix Python
        run: uv venv --python "${{ matrix.python-version }}"
      - name: Sync (install deps)
        run: uv sync --group dev
      - name: Black check
        run: uv run black --check .
      - name: Flake8
        run: uv run flake8 .
      - name: Tests (without qgis/gdal)
        run: make test-noqgis

  qgis-integration:
    runs-on: ubuntu-latest
    needs: lint-type-format-checks-and-non-qgis-tests
    strategy:
      fail-fast: false
      matrix:
        qgis_image:
          - qgis/qgis:3.44-jammy         # QGIS LTR
          - qgis/qgis:release-3_34       # DesignSafe (also a QGIS LTR)
          - qgis/qgis:release-3_36       # DesignSafe VM
    steps:
      - uses: actions/checkout@v4
      - name: Run QGIS tests in Docker
        env:
          QGIS_IMAGE: ${{ matrix.qgis_image }}
          QT_QPA_PLATFORM: offscreen
        run: make test-qgis

  package-zip:
    runs-on: ubuntu-latest
    needs: qgis-integration
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: astral-sh/setup-uv@v4
      - name: Create venv + sync dev
        run: |
          uv venv --python "3.12"
          uv sync --group dev
      - name: Build plugin ZIP
        run: make zip
      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v4
        with:
          name: qgis-plugin
          path: "*.zip"
          if-no-files-found: error
